0 info it worked if it ends with ok
1 verbose cli [ '/Users/lyall/Dev/Libraries/node/bin/node',
1 verbose cli   '/Users/lyall/Dev/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.3.12
3 info using node@v5.4.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/lyall/Dev/Projects/opensource/koa-jwt-redis-session',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/lyall/.npm/koa-jwt-redis-session/0.0.19/package.tgz not in flight; packing
9 info lifecycle koa-jwt-redis-session@0.0.19~prepublish: koa-jwt-redis-session@0.0.19
10 silly lifecycle koa-jwt-redis-session@0.0.19~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/Users/lyall/.npm/koa-jwt-redis-session/0.0.19/package.tgz',
11 verbose tar pack   '/Users/lyall/Dev/Projects/opensource/koa-jwt-redis-session' ]
12 verbose tarball /Users/lyall/.npm/koa-jwt-redis-session/0.0.19/package.tgz
13 verbose folder /Users/lyall/Dev/Projects/opensource/koa-jwt-redis-session
14 verbose addLocalTarball adding from inside cache /Users/lyall/.npm/koa-jwt-redis-session/0.0.19/package.tgz
15 silly cache afterAdd koa-jwt-redis-session@0.0.19
16 verbose afterAdd /Users/lyall/.npm/koa-jwt-redis-session/0.0.19/package/package.json not in flight; writing
17 verbose afterAdd /Users/lyall/.npm/koa-jwt-redis-session/0.0.19/package/package.json written
18 silly publish { bugs: { url: 'https://github.com/lyalls/koa-jwt-redis-session/issues' },
18 silly publish   dependencies:
18 silly publish    { debug: '*',
18 silly publish      redis: '^2.5.3',
18 silly publish      thunkify: '^2.1.2',
18 silly publish      uid2: '^0.0.3',
18 silly publish      jsonwebtoken: '^5.7.0',
18 silly publish      co: '^4.6.0',
18 silly publish      ioredis: '^1.15.1' },
18 silly publish   description: 'Pure JWT implementation using Redis as session storage for Koa 2, without any cookies',
18 silly publish   devDependencies:
18 silly publish    { koa: '^2.0.0',
18 silly publish      'koa-convert': '*',
18 silly publish      'koa-bodyparser': '^3.0.0',
18 silly publish      mocha: '*',
18 silly publish      should: '*',
18 silly publish      supertest: '*',
18 silly publish      'supertest-koa-agent': '*',
18 silly publish      'babel-cli': '^6.6.5',
18 silly publish      'babel-core': '*',
18 silly publish      'babel-loader': '*',
18 silly publish      'babel-polyfill': '*',
18 silly publish      'babel-preset-es2015': '*',
18 silly publish      'babel-preset-es2016-node5': '*',
18 silly publish      'babel-plugin-transform-runtime': '*',
18 silly publish      'babel-plugin-transform-class-properties': '^6.6.0' },
18 silly publish   directories: {},
18 silly publish   files: [ 'index.js', 'lib', 'src' ],
18 silly publish   homepage: 'https://github.com/lyalls/koa-jwt-redis-session',
18 silly publish   keywords:
18 silly publish    [ 'koa',
18 silly publish      'middleware',
18 silly publish      'jwt',
18 silly publish      'redis',
18 silly publish      'session',
18 silly publish      'non-cookie',
18 silly publish      'es6',
18 silly publish      'es7' ],
18 silly publish   license: 'MIT',
18 silly publish   maintainers: [ { name: 'Lyall Sun', email: 'lyall.sunlin@gmail.com' } ],
18 silly publish   name: 'koa-jwt-redis-session',
18 silly publish   optionalDependencies: {},
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+ssh://git@github.com/lyalls/koa-jwt-redis-session.git' },
18 silly publish   scripts:
18 silly publish    { 'test-dev': 'mocha --compilers js:babel-core/register ./src/test.js',
18 silly publish      test: 'mocha ./lib/test.js',
18 silly publish      build: 'babel --presets es2015,es2016-node5 --plugins transform-class-properties,transform-runtime --out-dir ./lib ./src' },
18 silly publish   version: '0.0.19',
18 silly publish   readme: '#JWT Redis Session for Koa 2\n\nPure JWT implementation using Redis as session storage for Koa 2, without any cookies\n\nQuick Start\n===========\nAs middleware:\n\n```javascript\nconst koa = require(\'koa\'),\n      bodyParser = require(\'koa-bodyparser\'),\n      session = require(\'koa-jwt-redis-session\')\n// import session from \'koa-jwt-redis-session\'\n\nconst app = new koa()\napp.use(bodyParser())\n\napp.use(session.default())\n\n// If using import\n// app.use(session()) \n\napp.use(async function(ctx, next){\n    let views = ctx.session.views || 0\n    ctx.session.views = ++views\n    try{\n       ctx.body = {views: ctx.session.views}\n       await next()\n    }catch(ex){\n       console.error(\'something wrong:\', ex)\n       ctx.status = 500\n       ctx.body = \'something wrong\'\n    }\n})\n\napp.listen(3333)\n```\n\nAs a function:\n\n```javascript\n// After used as middleware\n// Somewhere when using as backdore\nimport {createSession, authoriseRequest} from \'koa-jwt-redis-session\'\n\nlet openDoorHandler = async (ctx, next)=>{\n    let userObj = {account: \'sneaky\', password: \'open_the_back_door\'};\n    let token = await createSession(ctx, userObj);\n    ctx.body = token;\n    // Token is in JSON format: {token: ..... , expiresIn: 3600}\n    // expiresIn is the expire time in seconds, default is 3600\n}\n\nlet guardHandler = async (ctx, next)=>{\n    let user = await authoriseRequest(ctx);\n    if( user != undefined){\n        ctx.body = user;\n    }else{\n        ctx.throw(new Error(\'Unauthorized\'));\n    }\n}\n\n```\n\nOptions\n=======\n\nWhen creating session instance, you can pass in an option object \n\n```javascript\nconst sessionOptions = {\n       // ......\n}\napp.use(session.default(sessionOptions))\n\n// If using import\napp.use(session(sessionOptions))\n```\n\nHere is the default option values\n---------------------------------\n\n```javascript\n{\n  jwt: {\n    contentType: \'application/json\',\n    charset: \'utf-8\',\n    secret: \'koa-jwt-redis-session\' + new Date().getTime(),\n    authPath: \'/authorize\',\n    registerPath: \'/register\',\n    refreshTokenPath: \'/refreshToken\',\n    expiresIn: 3600,\n    accountKey: \'account\',\n    passwordKey: \'password\',\n    authHandler: function (account, password) {\n            \t\tif (account && password) {\n \t\t\t\tlet user = {};\n\t\t\t\tuser[accountKey] = account;\n\t\t\t\treturn user;\n\t\t\t}\n\t\t\telse return false;\n        },\n    registerHandler: function (account, password) {\n           \t\tif (account && password) {\n\t\t\t\tlet user = {};\n\t\t\t\tuser[accountKey] = account;\n\t\t\t\treturn user;\n\t\t\t}\n\t\t\telse return false; \n        }\n  },\n  session: {\n    sessionKey: \'session\',\n    sidKey: \'koa:sess\',\n  },\n  redis: {\n    port: 6379,\n    host: \'127.0.0.1\',\n    db: 0,\n    ttl: 3600,\n    options: {}\n  }\n}\n```\n\nAction flow\n===========\n\n1. Anonymous client post JSON user credential information `{ account: "...", password: "..." }` to `/register` to register an account, \n2. or post to `/authorize` to get authorization\n3. Client get token in JSON like `{ token: "...", expiresIn: 3600 }`, or an `401` error if not authorized\n4. From then on, client send every request by the http header: `Authorization: Bearer <token>`,\n5. or client would get `401` error if not authorized or *token expired*\n6. On the server side, afterward middlewares can operate `ctx.session` as will\n\n\nEnjoy!\n======',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: '295e8eb36ae106fff8dfa55e84dbcc4c323494fe',
18 silly publish   _id: 'koa-jwt-redis-session@0.0.19',
18 silly publish   _shasum: '02e83118ac79e7f29184398b3d7f84935f04e5ce',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name koa-jwt-redis-session
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/koa-jwt-redis-session
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /Users/lyall/.npm/koa-jwt-redis-session/0.0.19/package.tgz
26 verbose request uri https://registry.npmjs.org/koa-jwt-redis-session
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 3:15:04 PM
29 verbose request using bearer token for auth
30 verbose request id 5dc7f2543a2060a0
31 http request PUT https://registry.npmjs.org/koa-jwt-redis-session
32 http 403 https://registry.npmjs.org/koa-jwt-redis-session
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=300',
33 verbose headers   'content-length': '96',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Fri, 13 May 2016 07:15:07 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-nrt6132-NRT',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1463123707.069579,VS0,VE604',
33 verbose headers   vary: 'Accept-Encoding' }
34 verbose request invalidating /Users/lyall/.npm/registry.npmjs.org/koa-jwt-redis-session on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 0.0.19." : koa-jwt-redis-session
36 verbose stack     at makeError (/Users/lyall/Dev/Libraries/node/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
36 verbose stack     at CachingRegistryClient.<anonymous> (/Users/lyall/Dev/Libraries/node/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
36 verbose stack     at Request._callback (/Users/lyall/Dev/Libraries/node/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
36 verbose stack     at Request.self.callback (/Users/lyall/Dev/Libraries/node/lib/node_modules/npm/node_modules/request/request.js:198:22)
36 verbose stack     at emitTwo (events.js:87:13)
36 verbose stack     at Request.emit (events.js:172:7)
36 verbose stack     at Request.<anonymous> (/Users/lyall/Dev/Libraries/node/lib/node_modules/npm/node_modules/request/request.js:1082:10)
36 verbose stack     at emitOne (events.js:82:20)
36 verbose stack     at Request.emit (events.js:169:7)
36 verbose stack     at IncomingMessage.<anonymous> (/Users/lyall/Dev/Libraries/node/lib/node_modules/npm/node_modules/request/request.js:1009:12)
37 verbose statusCode 403
38 verbose pkgid koa-jwt-redis-session
39 verbose cwd /Users/lyall/Dev/Projects/opensource/koa-jwt-redis-session
40 error Darwin 15.4.0
41 error argv "/Users/lyall/Dev/Libraries/node/bin/node" "/Users/lyall/Dev/bin/npm" "publish"
42 error node v5.4.1
43 error npm  v3.3.12
44 error code E403
45 error "You cannot publish over the previously published version 0.0.19." : koa-jwt-redis-session
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
